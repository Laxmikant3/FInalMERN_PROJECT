{"ast":null,"code":"// authApiProvider.js\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8000';\n\n// Function to handle user sign-in\nconst signIn = async (credentials, callback) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    if (response.data.success) {\n      callback(response.data.user, response.data.message);\n    } else {\n      callback(null, response.data.message);\n    }\n    return {\n      success: response.data.success,\n      data: response.data.success ? response.data.user : null,\n      message: response.data.message\n    };\n  } catch (error) {\n    console.error('Error signing in:', error);\n    callback(null, 'An error occurred while signing in');\n    return {\n      success: false,\n      message: 'An error occurred while signing in'\n    };\n  }\n};\n\n// Function to handle user sign-out\nconst signOut = async callback => {\n  // No need to send a request to the backend for logout\n  callback({\n    success: true,\n    message: 'User signed out successfully'\n  });\n};\nlet apiAuthProvider = {\n  signIn,\n  signOut\n};\nexport default apiAuthProvider;","map":{"version":3,"names":["axios","API_URL","signIn","credentials","callback","response","post","data","success","user","message","error","console","signOut","apiAuthProvider"],"sources":["C:/Users/ASUS/Downloads/FinalMernProject-SHOPLY-main/FinalMernProject-SHOPLY-main/react/src/auth/authApiProvider.js"],"sourcesContent":["// authApiProvider.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8000'; \n\n// Function to handle user sign-in\nconst signIn = async (credentials, callback) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    if (response.data.success) {\n      callback(response.data.user, response.data.message);\n    } else {\n      callback(null, response.data.message);\n    }\n    return {success: response.data.success, data: response.data.success ? response.data.user : null, message: response.data.message};\n    \n  } catch (error) {\n    console.error('Error signing in:', error);\n    callback(null, 'An error occurred while signing in');\n    return { success: false, message: 'An error occurred while signing in' };\n  }\n};\n\n// Function to handle user sign-out\nconst signOut = async (callback) => {\n  // No need to send a request to the backend for logout\n  callback({ success: true, message: 'User signed out successfully' });\n};\n\nlet apiAuthProvider = {signIn, signOut}\n\nexport default apiAuthProvider\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,MAAMC,MAAM,GAAG,MAAAA,CAAOC,WAAW,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,GAAEL,OAAQ,QAAO,EAAEE,WAAW,CAAC;IAClE,IAAIE,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;MACzBJ,QAAQ,CAACC,QAAQ,CAACE,IAAI,CAACE,IAAI,EAAEJ,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC;IACrD,CAAC,MAAM;MACLN,QAAQ,CAAC,IAAI,EAAEC,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC;IACvC;IACA,OAAO;MAACF,OAAO,EAAEH,QAAQ,CAACE,IAAI,CAACC,OAAO;MAAED,IAAI,EAAEF,QAAQ,CAACE,IAAI,CAACC,OAAO,GAAGH,QAAQ,CAACE,IAAI,CAACE,IAAI,GAAG,IAAI;MAAEC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACG;IAAO,CAAC;EAElI,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzCP,QAAQ,CAAC,IAAI,EAAE,oCAAoC,CAAC;IACpD,OAAO;MAAEI,OAAO,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAqC,CAAC;EAC1E;AACF,CAAC;;AAED;AACA,MAAMG,OAAO,GAAG,MAAOT,QAAQ,IAAK;EAClC;EACAA,QAAQ,CAAC;IAAEI,OAAO,EAAE,IAAI;IAAEE,OAAO,EAAE;EAA+B,CAAC,CAAC;AACtE,CAAC;AAED,IAAII,eAAe,GAAG;EAACZ,MAAM;EAAEW;AAAO,CAAC;AAEvC,eAAeC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}